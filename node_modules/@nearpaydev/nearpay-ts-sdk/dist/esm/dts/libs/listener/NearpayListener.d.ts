import { CONNECTION_STATE } from "../types";
import { NearpayLibProvider } from "../lib-provider";
import { NearpayEvent } from "./types";
import { EventTarget } from "event-target-shim";
/**
 * will handle listening and emmeting events to Nearpay object
 *
 * have access to the provider
 */
export declare class NearpayListener {
    private lib_provider;
    constructor(lib_provider: NearpayLibProvider);
    private event;
    addEventListener(type: NearpayEvent, callback: EventTarget.EventListener<any, any>, options?: EventTarget.AddOptions): () => void;
    removeEventListener(type: NearpayEvent, callback: EventTarget.EventListener<any, any>, options?: EventTarget.AddOptions): void;
    dispatchEvent(eventName: NearpayEvent): void;
    dispatchConnectivityChange(state: CONNECTION_STATE): void;
}
