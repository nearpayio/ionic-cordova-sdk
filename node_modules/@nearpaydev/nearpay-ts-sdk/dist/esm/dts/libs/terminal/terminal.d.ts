import { NearpayLibProvider } from "../lib-provider";
import { RemotePurchaseResponse, RemoteRefundResponse, RemoteReversalResponse, RemoteReconciliationResponse } from "../payload/types";
import { PurchaseOptions, ReconcileOptions, RefundOptions, ReversalOptions } from "./types";
export declare class Terminal {
    private lib_provider;
    constructor(lib_provider: NearpayLibProvider);
    /**
     * updates the terminal and returns it self
     * @returns terminal it self
     */
    private update;
    /**
     * do a purchase transaction and return a transaction object
     * @param amount the purcahse amount
     * @param reference_id optional, customer referance id
     * @param enable_receipt_ui optional, enable ui receipt
     * @param enable_reversal optional, enable reversal of transaction
     * @param finish_timeout optional, timeout in seconds
     * @returns a purchase response
     */
    purchase({ jobId, messageId, amount, enable_ui_dismiss, reference_id, enable_receipt_ui, enable_reversal, finish_timeout, }: PurchaseOptions): Promise<RemotePurchaseResponse>;
    /**
     * do a refund reansaction and return a transaction object
     *
     * @param amount the refund amount
     * @param original_transaction_uuid the original transaction id of the refunded transaction
     * @param reference_id optional, customer referance id
     * @param enable_receipt_ui optional, enable ui receipt
     * @param enable_editable_refund_amount_ui optional, enable editing refund amount from ui
     * @param enable_reversal optional, enable reversal of transaction
     * @param finish_timeout optional, timeout in seconds
     * @returns a refund response
     */
    refund({ jobId, messageId, amount, original_transaction_uuid, enable_ui_dismiss, reference_id, enable_receipt_ui, enable_reversal, enable_editable_refund_amount_ui, finish_timeout, }: RefundOptions): Promise<RemoteRefundResponse>;
    /**
     * do a reversal reansaction and return a transaction object
     *
     * @param original_transaction_uuid the original transaction id of the refunded transaction
     * @param enable_receipt_ui optional, enable ui receipt
     * @param finish_timeout optional, timeout in seconds
     * @returns a reversal response
     */
    reversal({ jobId, messageId, original_transaction_uuid, enable_receipt_ui, finish_timeout, }: ReversalOptions): Promise<RemoteReversalResponse>;
    /**
     * do a reconcilation using ui
     *
     * @param enable_receipt_ui optional, enable ui receipt
     * @param finish_timeout optional, timeout in seconds
     * @returns a reconciliation response
     */
    reconcile({ jobId, messageId, enable_receipt_ui, finish_timeout, }: ReconcileOptions): Promise<RemoteReconciliationResponse>;
}
