type asyncWebSocketListeners = {
    onConnected?: (a: any) => void;
    ondisconnected?: (a: any) => void;
    onError?: (a: any) => void;
    onMessage?: (a: any) => void;
};
/**
 * async websocket is used to generate an async websocket
 * insted of a sync one, it will use a builder method called
 * connect described down
 */
export declare class asyncWebSocket {
    /**
     *
     * @param url url to a ws
     * @param listeners listeners to
     * @returns array of two variables:
     *              1- the ws device it self, you can close and do any operation with it
     *              2- the promise of connection error, it will resolve to undefined idf no error
     *                  or else it will be rejected to error string
     */
    static connect(url: string, { onConnected, ondisconnected, onError, onMessage, }: asyncWebSocketListeners): Promise<[WebSocket, Promise<void>]>;
}
export {};
